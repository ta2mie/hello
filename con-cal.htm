<!DOCTYPE html>
<html lang="zh">
<head>
<meta charset="UTF-8">
<title>服务选择准则计算器</title>
<style>
  table { width: 100%; border-collapse: collapse; margin-top: 20px; }
  th, td { border: 1px solid #ddd; padding: 8px; text-align: center; }
  th { background-color: #f2f2f2; }
</style>
</head>
<body>

<h2>服务选择准则评估表</h2>

<table id="criteriaTable">
  <thead>
    <tr>
      <th>投入程度</th>
      <th>影响</th>
      <th>收入潜力</th>
      <th>其他回报</th>
      <th>决策结果</th>
    </tr>
  </thead>
  <tbody>
    <!-- 动态生成的内容将会插入到这里 -->
  </tbody>
</table>

<script>
// 定义每个标准的级别
const criteriaLevels = ['低', '中', '高'];

// 生成所有可能的组合
function generateAllCombinations() {
  const tbody = document.querySelector('#criteriaTable tbody');
  const combinations = [];
  for (let effort of criteriaLevels) {
    for (let impact of criteriaLevels) {
      for (let incomePotential of criteriaLevels) {
        for (let otherReturn of criteriaLevels) {
          combinations.push([effort, impact, incomePotential, otherReturn]);
        }
      }
    }
  }

  // 对每种组合进行评估并添加到表格中
  combinations.forEach(combination => {
    const row = document.createElement('tr');

    combination.forEach(level => {
      const cell = document.createElement('td');
      cell.textContent = level;
      row.appendChild(cell);
    });

    // 计算决策结果
    const decision = evaluateServiceSelection(...combination);
    const decisionCell = document.createElement('td');
    decisionCell.textContent = decision;
    row.appendChild(decisionCell);

    tbody.appendChild(row);
  });
}

function evaluateServiceSelection(effort, impact, incomePotential, returnVal) {
  // 收入潜力转换为可支付/不可支付
  const income = incomePotential === '高' ? 'yes' : 'no';
  
  // 根据你的准则设置逻辑
  if ((effort === '低' && (income === 'yes' || (income === 'no' && impact === '高'))) || 
      (effort === '中' && income === 'yes') ||
      (effort === '高' && income === 'yes' && returnVal === '高')) {
    return "建议提供服务";
  } else {
    return "不建议提供服务";
  }
}

// 页面加载完成后生成表格
document.addEventListener('DOMContentLoaded', () => {
  generateAllCombinations();
});
</script>

</body>
</html>
